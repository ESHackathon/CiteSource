% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{plot_contributions}
\alias{plot_contributions}
\title{Create a bar chart that compares source contributions over stages}
\usage{
plot_contributions(
  data,
  facets = cite_source,
  bars = cite_label,
  color = type,
  center = FALSE,
  color_order = c("unique", "duplicated"),
  bar_order = "any",
  facet_order = "any",
  x_axis_label = ""
)
}
\arguments{
\item{data}{A tibble with one hit per row, with variables indicating meta-data of interest.}

\item{facets}{Variable in data used for facets (i.e. sub-plots). Defaults to source (i.e. cite_source)}

\item{bars}{Variable in data used for bars. Defaults to label (i.e. cite_label)}

\item{color}{Color used to fill bars. Default to \code{unique}}

\item{center}{Logical. Should one color be above and one below the axis?}

\item{color_order}{Character vector indicating the desired order of colors (e.g., c("unique", "duplicated"). Any levels not mentioned will be left in their existing order after the explicitly mentioned levels. Use "any" to leave order as is.}

\item{bar_order}{Character vector indicating the desired order of bars (e.g., c("found", "screened"). Any levels not mentioned will be left in their existing order after the explicitly mentioned levels. Use "any" to leave order as is.}

\item{facet_order}{Character vector indicating the desired order of facets (e.g., c("WoS", "Scopus"). Any levels not mentioned will be left in their existing order after the explicitly mentioned levels. Use "any" to leave order as is.}

\item{x_axis_label}{Character. Label for the x-axis, indicating what the bars represent.}
}
\description{
Create a faceted plot that shows unique contributions and duplicated records across
two metadata dimensions. Most typical use-case might be to show the contributions of each source
across different screening stages.
}
\examples{
data <- data.frame(
  article_id = 1:100,
  cite_source = sample(c("DB 1", "DB 2", "DB 3"), 100, replace = TRUE),
  cite_label = sample(c("2020", "2021", "2022"), 100, replace = TRUE),
  type = c("unique", "duplicated")[rbinom(100, 1, .7) + 1]
)

plot_contributions(data, center = TRUE)
}
