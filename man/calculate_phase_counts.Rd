% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new_count_and_table.R
\name{calculate_phase_counts}
\alias{calculate_phase_counts}
\title{Calculate Phase Counts with Precision and Recall}
\usage{
calculate_phase_counts(unique_citations, n_unique, db_colname)
}
\arguments{
\item{unique_citations}{A data frame containing unique citations.
It must include the columns \code{cite_source}, \code{cite_label}, and \code{duplicate_id}.}

\item{n_unique}{A data frame containing counts of unique records.
Typically filtered by specific criteria, such as \code{cite_label == "search"}.}

\item{db_colname}{The name of the column representing the citation source
in the \code{unique_citations} data frame.}
}
\value{
A data frame with phase counts and calculated precision and recall
for each citation source, including:
\itemize{
\item \verb{Distinct Records}: The count of distinct records per source.
\item \code{screened}: The count of records in the "screened" phase.
\item \code{final}: The count of records in the "final" phase.
\item \code{Precision}: The precision metric calculated as \verb{final / Distinct Records}.
\item \code{Recall}: The recall metric calculated as \verb{final / Total final records}.
}
}
\description{
This function calculates the distinct record counts, as well as screened
and final record counts, for each citation source across different phases
(e.g., "screened", "final"). It also calculates precision and recall metrics
for each source.
}
\details{
The function starts by calculating the total distinct records, as well as
the total "screened" and "final" records across all sources. It then
calculates distinct counts for each source, followed by counts for "screened"
and "final" records. Finally, it calculates precision and recall metrics and
adds a total row summarizing these counts across all sources.
}
\examples{
# Example usage with a sample dataset
citations <- data.frame(
  cite_source = c("Source1", "Source2", "Source3"),
  cite_label = c("screened,final", "screened", "final"),
  duplicate_id = c(1, 2, 3)
)
n_unique <- data.frame(
  cite_source = c("Source1", "Source2", "Source3"),
  unique = c(10, 20, 30)
)
calculate_phase_counts(citations, n_unique, "cite_source")
}
